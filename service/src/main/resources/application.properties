

# apollo配置中心，env指定查找参数的环境
apollo:.env=DEV

spring.jackson.default-property-inclusion=non_null

#hibernate properties for show sql with parameters in the console
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.type=trace
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=false
# 表字段名跟java一致
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl


#properties for logging the sql statements with their parameters
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#logging.level.org.hibernate.persister.entity.SingleTableEntityPersister=DEBUG
logging.level.org.hibernate.persister.entity=DEBUG
logging.level.org.hibernate.persister.walking.spi=WARN
logging.level.org.hibernate.loader.plan=WARN

# custom interceptors
spring.jpa.properties.hibernate.ejb.interceptor=com.pagoda.platform.jms.hibernate.PagodaHibernateInterceptor
spring.jpa.properties.hibernate.persister.resolver=com.pagoda.platform.jms.hibernate.PagodaPersisterClassResolver

# HikariCP数据库连接池配置
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=50
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.datasource.hikari.connectionTimeout=20000        

spring.datasource.max-active=200
spring.datasource.max-idle=6
spring.datasource.min-idle=2
spring.datasource.initial-size=2
spring.datasource.max-wait=60000
spring.datasource.time-between-eviction-runs-millis=60000
spring.datasource.min-evictable-idle-time-millis=300000

spring.datasource.validation-query=SELECT 1 FROM DUAL
spring.datasource.test-on-borrow=false
spring.datasource.test-on-return=false
spring.datasource.test-while-idle=true

#spring.datasource.poolPreparedStatements=false
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20

spring.datasource.filters=stat,wall
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


spring.redis.pool.min-idle=2
spring.redis.pool.max-idle=6
spring.redis.pool.max-active=50
spring.redis.pool.max-wait=1000


# true by default
management.metrics.web.server.auto-time-requests=true
endpoints.prometheus.id=prometheus
# default is `http.server.requests`
management.metrics.web.server.requests-metric-name=http.server.requests
# default is http.client.requests
management.metrics.web.client.requests-metric-name=http.client.requests

management.security.enabled=false
management.health.redis.enabled=true
management.health.db.enabled=true

endpoints.metrics.sensitive=false
endpoints.metrics.enabled=true
endpoints.health.sensitive=false
endpoints.health.enabled=true
